generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Role {
  id           Int           @id @default(autoincrement())
  nom          String        @unique
  utilisateurs Utilisateur[]
}

model Utilisateur {
  id         Int        @id @default(autoincrement())
  nom        String
  prenom     String
  email      String     @unique
  motDePasse String
  idRole     Int
  commandes  Commande[]
  role       Role       @relation(fields: [idRole], references: [id])
}

model Stock {
  id                 Int               @id @default(autoincrement())
  nom                String
  description        String?
  quantiteDisponible Int
  type               StockType
  prix               Float
  detailsCommande    DetailsCommande[]
  mouvements         Mouvement[]
}

model Commande {
  id              Int               @id @default(autoincrement())
  idUtilisateur   Int
  dateCommande    DateTime          @default(now())
  statut          CommandeStatut    @default(en_attente)
  utilisateur     Utilisateur       @relation(fields: [idUtilisateur], references: [id])
  detailsCommande DetailsCommande[]
  mouvements      Mouvement[]
}

model DetailsCommande {
  idCommande Int
  idStock    Int
  quantite   Int
  commande   Commande @relation(fields: [idCommande], references: [id])
  stock      Stock    @relation(fields: [idStock], references: [id])

  @@id([idCommande, idStock])
}

model Mouvement {
  id            Int           @id @default(autoincrement())
  idStock       Int
  type          MouvementType
  quantite      Int
  dateMouvement DateTime      @default(now())
  idCommande    Int?
  commande      Commande?     @relation(fields: [idCommande], references: [id])
  stock         Stock         @relation(fields: [idStock], references: [id])
}

enum StockType {
  medicament
  materiel
}

enum CommandeStatut {
  en_attente
  valide
  invalide
}

enum MouvementType {
  entree
  sortie
}
